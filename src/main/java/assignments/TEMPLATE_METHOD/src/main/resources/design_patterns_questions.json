[
    {
        "questionText": "Which pattern provides a way to create objects while hiding the creation logic, rather than instantiating objects directly?",
        "options": [
            "Factory Method",
            "Abstract Factory",
            "Singleton",
            "Composite"
        ],
        "correctAnswer": "A"
    },
    {
        "questionText": "Which pattern is a structural pattern that allows composing objects into a tree structure to represent part-whole hierarchies?",
        "options": [
            "Decorator",
            "Composite",
            "Observer",
            "Strategy"
        ],
        "correctAnswer": "B"
    },
    {
        "questionText": "Which pattern is used when there is a need to manage a state sequence in an object?",
        "options": [
            "Memento",
            "State",
            "Chain of Responsibility",
            "Template Method"
        ],
        "correctAnswer": "B"
    },
    {
        "questionText": "Which pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified?",
        "options": [
            "Singleton",
            "Observer",
            "Decorator",
            "Strategy"
        ],
        "correctAnswer": "B"
    },
    {
        "questionText": "What type of design pattern is Singleton?",
        "options": [
            "Creational",
            "Structural",
            "Behavioral",
            "Functional"
        ],
        "correctAnswer": "A"
    },
    {
        "questionText": "Which pattern allows altering an object's behavior when its internal state changes?",
        "options": [
            "Observer",
            "Decorator",
            "State",
            "Strategy"
        ],
        "correctAnswer": "C"
    },
    {
        "questionText": "Which pattern allows an object to alter its behavior when its internal state changes? The object will appear to change its class.",
        "options": [
            "State",
            "Strategy",
            "Template Method",
            "Memento"
        ],
        "correctAnswer": "A"
    },
    {
        "questionText": "Which pattern is concerned with the algorithm encapsulation by defining a family of algorithms, encapsulating each one, and making them interchangeable?",
        "options": [
            "Observer",
            "Strategy",
            "Decorator",
            "Chain of Responsibility"
        ],
        "correctAnswer": "B"
    },
    {
        "questionText": "Is the Strategy pattern Creational, Structural, or Behavioral?",
        "options": [
            "Creational",
            "Structural",
            "Behavioral",
            "Functional"
        ],
        "correctAnswer": "C"
    }
]
